<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>楓楓瞓覺計時器</title>
  <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;700&display=swap" rel="stylesheet"/>
  <style>
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body {
      background: #E0F7FA;
      font-family: 'Rubik', sans-serif;
      color: #333;
      display: flex;
      justify-content: center;
      padding: 1rem;
    }
    .card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 3px 8px rgba(0,0,0,0.15);
      max-width: 420px;
      width: 100%;
      padding: 1.5rem;
    }
    h1 { text-align: center; color: #01579B; font-weight: 500; margin-bottom: 1rem; }
    label { display: block; margin-top: 1rem; font-weight: 500; }
    input[type="time"] {
      width: 100%; padding: 0.6rem; margin-top: 0.3rem;
      border: 1.5px solid #81D4FA; border-radius: 8px;
      background: #E1F5FE; font-size: 1rem;
    }
    .awake-group { margin-top: 0.5rem; }
    .awake-group label {
      display: block; margin-top: 0.5rem;
      font-weight: 400; cursor: pointer;
    }
    .awake-group input[type="radio"] { margin-right: 0.5rem; accent-color: #0277BD; }
    .info {
      display: flex; align-items: center;
      background: #E1F5FE; border-left: 4px solid #03A9F4;
      border-radius: 8px; padding: 0.75rem 1rem;
      margin-top: 0.5rem; font-weight: 500; color: #0277BD;
    }
    .info.ritual::before { content: "🕯️"; margin-right: 0.5rem; }
    .info.bed::before    { content: "🛏️"; margin-right: 0.5rem; }
    #next-nap {
      font-size: 1.5rem; font-weight: 600; text-align: center;
      background: #B3E5FC; border: 1px solid #03A9F4;
      border-radius: 8px; padding: 0.7rem 1rem;
      margin-top: 0.75rem;
    }
    #countdown {
      text-align: center; font-size: 1.25rem;
      margin-top: 0.5rem; color: #01579B; font-weight: 500;
    }
    #error {
      color: #D32F2F; margin-top: 0.5rem; font-size: 0.9rem;
    }
  </style>
</head>
<body>
  <div class="card">
    <h1>楓楓瞓覺計時器 💤</h1>
    <div class="controls">
      <label>瞓醒時間
        <input type="time" id="wake-time" required>
      </label>
      <label>清醒間隔</label>
      <div class="awake-group">
        <label><input type="radio" name="awake-window" value="2.5">2.5 個鐘</label>
        <label><input type="radio" name="awake-window" value="2.75">2.75 個鐘</label>
        <label><input type="radio" name="awake-window" value="3" checked>3 個鐘</label>
      </div>
      <p id="error"></p>
    </div>
    <div class="output">
      <p id="ritual-time" class="info ritual"></p>
      <p id="bed-time" class="info bed"></p>
      <p id="next-nap"></p>
      <p id="countdown"></p>
    </div>
  </div>
  <script>
    const pad = n => n.toString().padStart(2,'0');
    let countdownInterval;
    document.addEventListener('DOMContentLoaded', () => {
      const timeInput = document.getElementById('wake-time');
      const now = new Date();
      timeInput.value = `${pad(now.getHours())}:${pad(now.getMinutes())}`;
      calculate();
      timeInput.addEventListener('change', calculate);
      document.querySelectorAll('input[name="awake-window"]').forEach(r =>
        r.addEventListener('change', calculate)
      );
    });
    function startCountdown(targetMs) {
      clearInterval(countdownInterval);
      const countdownEl = document.getElementById('countdown');
      function update() {
        const diff = targetMs - Date.now();
        if (diff <= 0) {
          countdownEl.textContent = '🕒 時間到！';
          clearInterval(countdownInterval);
          return;
        }
        const h = Math.floor(diff/3600000);
        const m = Math.floor((diff%3600000)/60000);
        const s = Math.floor((diff%60000)/1000);
        countdownEl.textContent = `⏰ 倒數 ${h?h+'h ':''}${pad(m)}m ${pad(s)}s`;
      }
      update();
      countdownInterval = setInterval(update, 1000);
    }
    function calculate() {
      const timeVal = document.getElementById('wake-time').value;
      const sel = document.querySelector('input[name="awake-window"]:checked');
      const windowH = sel?parseFloat(sel.value):NaN;
      const err = document.getElementById('error');
      const ritualEl = document.getElementById('ritual-time');
      const bedEl    = document.getElementById('bed-time');
      const nextEl   = document.getElementById('next-nap');
      if (!timeVal||isNaN(windowH)) {
        err.textContent = '請填返時間同清醒間隔';
        [ritualEl,bedEl,nextEl].forEach(el=>el.textContent='');
        document.getElementById('countdown').textContent='';
        return;
      }
      err.textContent = '';
      const now = new Date();
      const [h,m] = timeVal.split(':').map(Number);
      const wakeMs = new Date(now.getFullYear(),now.getMonth(),now.getDate(),h,m).getTime();
      const nextMs   = wakeMs + windowH*3600000;
      const ritualMs = nextMs - 20*60000;
      const bedMs    = nextMs - 10*60000;
      ritualEl.textContent = `${pad(new Date(ritualMs).getHours())}:${pad(new Date(ritualMs).getMinutes())} 做睡眠儀式（提早20分鐘）`;
      bedEl.textContent    = `${pad(new Date(bedMs).getHours())}:${pad(new Date(bedMs).getMinutes())} 放上床（提早10分鐘）`;
      nextEl.textContent   = `預計瞓覺時間：${pad(new Date(nextMs).getHours())}:${pad(new Date(nextMs).getMinutes())}`;
      startCountdown(nextMs);
    }
  </script>
</body>
</html>
